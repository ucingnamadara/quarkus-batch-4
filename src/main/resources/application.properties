quarkus.http.port=8081

# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = Password09!
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5431/kawahedukasi

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.default-schema=batch_4_quarkus

#jwt
mp.jwt.verify.publickey.location=/publicKey.pem
mp.jwt.verify.issuer=kawahedukasi-issuer

quarkus.native.resources.includes=publicKey.pem
smallrye.jwt.sign.key.location=/privateKey.pem

#rest client
quarkus.rest-client."com.kawahedukasi.batch4.service.WilayahClientService".url=http://localhost:8085
quarkus.rest-client."com.kawahedukasi.batch4.service.WilayahClientService".scope=javax.inject.Singleton


# kafka
kafka.bootstrap.servers=localhost:9092

# Inbound
mp.messaging.incoming.spring-peserta.topic=spring-peserta
mp.messaging.incoming.spring-peserta.connector=smallrye-kafka
mp.messaging.incoming.spring-peserta.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Outbound
mp.messaging.outgoing.quarkus-peserta.topic=quarkus-peserta
mp.messaging.outgoing.quarkus-peserta.connector=smallrye-kafka
mp.messaging.outgoing.quarkus-peserta.value.serializer=org.apache.kafka.common.serialization.StringSerializer

